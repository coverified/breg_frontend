user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    map $remote_addr $remote_addr_anon {
        ~(?P<ip>\d+\.\d+\.\d+)\.    $ip.0;
        ~(?P<ip>[^:]+:[^:]+):       $ip::;
        default                     0.0.0.0;
    }

    log_format  main  '$remote_addr_anon - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # How long to allow each connection to stay idle.
    # Longer values are better for each individual client, particularly for SSL,
    # but means that worker connections are tied up longer.
    # Default: 75s
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_timeout
    keepalive_timeout 20s;

    # Speed up file transfers by using `sendfile()` to copy directly between
    # descriptors rather than using `read()`/`write()``.
    # For performance reasons, on FreeBSD systems w/ ZFS this option should be
    # disabled as ZFS's ARC caches frequently used files in RAM by default.
    # Default: off
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile
    sendfile on;

    # Don't send out partial frames; this increases throughput since TCP frames
    # are filled up before being sent out.
    # Default: off
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#tcp_nopush
    tcp_nopush on;


    # ----------------------------------------------------------------------
    # | Cache file-descriptors                                             |
    # ----------------------------------------------------------------------

    # This tells Nginx to cache open file handles, "Not Found" errors and
    # metadata about files and their permissions.
    #
    # Based on these cached metadata, Nginx can immediately begin sending data when
    # a popular file is requested, and will also know to immediately send a 404 if a
    # file is missing on disk, and so on.
    #
    # (!) It also means that the server won't react immediately to changes on disk,
    #     which may be undesirable.
    #     As only metadata are cached, edited files may be truncated until the cache
    #     is refreshed.
    #     https://github.com/h5bp/server-configs-nginx/issues/203
    #
    # In the below configuration, inactive files are released from the cache after
    # 20 seconds, whereas active (recently requested) files are re-validated every
    # 30 seconds.
    # Descriptors will not be cached unless they are used at least 2 times within
    # 20 seconds (the inactive time).
    # A maximum of the 1000 most recently used file descriptors can be cached at
    # any time.
    #
    # Production servers with stable file collections will definitely want to enable
    # the cache.
    #
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache

    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;


    # ----------------------------------------------------------------------
    # | Cache expiration                                                   |
    # ----------------------------------------------------------------------

    # Serve resources with a far-future expiration date.
    #
    # (!) If you don't control versioning with filename-based cache busting, you
    # should consider lowering the cache times to something like one week.
    #
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires
    # https://nginx.org/en/docs/http/ngx_http_headers_module.html#expires

    map $sent_http_content_type $expires {
      default                                 1M;

      # No content
      ""                                      off;

      # CSS
      ~*text/css                              1y;

      # Data interchange
      ~*application/atom\+xml                 1h;
      ~*application/rdf\+xml                  1h;
      ~*application/rss\+xml                  1h;

      ~*application/json                      0;
      ~*application/ld\+json                  0;
      ~*application/schema\+json              0;
      ~*application/geo\+json                 0;
      ~*application/xml                       0;
      ~*text/calendar                         0;
      ~*text/xml                              0;

      # Favicon (cannot be renamed!) and cursor images
      ~*image/vnd.microsoft.icon              1w;
      ~*image/x-icon                          1w;

      # HTML
      ~*text/html                             0;

      # JavaScript
      ~*application/javascript                1y;
      ~*application/x-javascript              1y;
      ~*text/javascript                       1y;

      # Manifest files
      ~*application/manifest\+json            1w;
      ~*application/x-web-app-manifest\+json  0;
      ~*text/cache-manifest                   0;

      # Markdown
      ~*text/markdown                         0;

      # Media files
      ~*audio/                                1M;
      ~*image/                                1M;
      ~*video/                                1M;

      # WebAssembly
      ~*application/wasm                      1y;

      # Web fonts
      ~*font/                                 1M;
      ~*application/vnd.ms-fontobject         1M;
      ~*application/x-font-ttf                1M;
      ~*application/x-font-woff               1M;
      ~*application/font-woff                 1M;
      ~*application/font-woff2                1M;

      # Other
      ~*text/x-cross-domain-policy            1w;
    }

    expires $expires;


    # ----------------------------------------------------------------------
    # | Compression                                                        |
    # ----------------------------------------------------------------------

    # https://nginx.org/en/docs/http/ngx_http_gzip_module.html

    # Enable gzip compression.
    # Default: off
    gzip on;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and CPU usage, offering about 75%
    # reduction for most ASCII files (almost identical to level 9).
    # Default: 1
    gzip_comp_level 5;

    # Don't compress anything that's already small and unlikely to shrink much if at
    # all (the default is 20 bytes, which is bad as that usually leads to larger
    # files after gzipping).
    # Default: 20
    gzip_min_length 256;

    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    # Default: off
    gzip_proxied any;

    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    # Default: off
    gzip_vary on;

    # Compress all output labeled with one of the following MIME-types.
    # `text/html` is always compressed by gzip module.
    # Default: text/html
    gzip_types
      application/atom+xml
      application/geo+json
      application/javascript
      application/x-javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rdf+xml
      application/rss+xml
      application/vnd.ms-fontobject
      application/wasm
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/eot
      font/otf
      font/ttf
      image/bmp
      image/svg+xml
      text/cache-manifest
      text/calendar
      text/css
      text/javascript
      text/markdown
      text/plain
      text/xml
      text/vcard
      text/vnd.rim.location.xloc
      text/vtt
      text/x-component
      text/x-cross-domain-policy;

    include /etc/nginx/conf.d/*.conf;
}

